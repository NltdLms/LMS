@model NLTD.EmployeePortal.LMS.Common.QueryModel.EmployeeAttendanceQueryModel

<style type="text/css">
    .ui-autocomplete {
        height: 220px;
        overflow-y: scroll;
        overflow-x: hidden;
    }

    th {
        font-size: 11px;
    }

    td {
        font-size: 12px;
    }

    form {
        margin-bottom: 0px;
    }

    .box-body {
        padding: 10px 10px 0px 10px;
    }
</style>

<script src="~/Scripts/DataTables/jquery.dataTables.min.js"></script>
<link href="~/Content/DataTables/css/jquery.dataTables.min.css" rel="stylesheet" />
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="~/Scripts/daterangepicker.js"></script>
<link href="~/Content/daterangepicker.css" rel="stylesheet" />

@section scripts
{
    <script src="~/Scripts/jquery-2.2.4.js"></script>
    <script src="~/Scripts/lms.js?v=1.08"></script>
    <script type="text/javascript" src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.js"></script>
    <link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet" />

    <script src="~/Scripts/moment.js"></script>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <script type="text/JavaScript">
        var nameList = [];
        $(document).ready(function () {
            $("#DateRange").daterangepicker({
                locale: {
                    format: 'DD-MM-YYYY'
                },
                "autoApply": true,
                "showDropdowns": true,
                ranges: {
                    "Today": [moment(), moment()],
                    "Yesterday": [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    "This Week": [moment().startOf('week'), moment().endOf('week')],
                    "This Month": [moment().startOf('month'), moment().endOf('month')],
                    "This Year": [moment().startOf('year'), moment().endOf('year')],
                    "Last 30 days": [moment().subtract(29, 'days'), moment()],
                    "Last 180 days": [moment().subtract(179, 'days'), moment()],
                    "Last 1 Year": [moment().subtract(1, 'year').add(1, 'day'), moment()]
                },
                 startDate: '@DateTime.Now.AddDays(-29).ToString("dd-MM-yyyy")',
                endDate: '@DateTime.Now.ToString("dd-MM-yyyy")'
            });
            var curdate = new Date();
            $("#FromDate").val('@DateTime.Now.AddDays(-29).ToString("dd-MM-yyyy")');
            $("#ToDate").val('@DateTime.Now.ToString("dd-MM-yyyy")');
            $("#Name").keyup(function () {
                if ($("#Name").val() == "") {
                    $("#SearchUserID").val("");
                }
            });
            $('#DateRange').on('apply.daterangepicker',
                function (ev, picker) {
                    $("#FromDate").val(picker.startDate.format('DD-MM-YYYY'));
                    $("#ToDate").val(picker.endDate.format('DD-MM-YYYY'));
                });

            $("#Name").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Admin/GetEmployeeList",
                        type: "POST",
                        dataType: "json",
                        data: { term: request.term },
                        success: function (data) {
                            nameList = $.map(data,
                                function (item) {
                                    return { label: item.Name, value: item.UserId };
                                });
                            response(nameList);
                        }
                    })
                },
                messages: {
                    noResults: "",
                    results: function () { }
                },
                select: function (event, ui) {
                    event.preventDefault();
                    $("#UserID").val(ui.item.value);
                },
                focus: function (event, ui) {
                    event.preventDefault();
                    $("#Name").val(ui.item.label);
                    $("#UserID").val(ui.item.value);
                },
                search: function (event, ui) {
                    $("#UserID").val("");
                }
            });

            $("#divLoading").show();
            var myDirectEmployees = false;
            if ($("#RequestLevelPerson").val() === "Team")
            {
                myDirectEmployees = true;
            }
            $("#divForEmployeeAttendance")
                .load('/Admin/loadAccesCardEmployeeAttendance?FromDate=Nodate&ToDate=Nodate&requestLevelPerson=' + $("#RequestLevelPerson").val(),
                function () {

                     $(".dtatable").dataTable({ "aaSorting": [] });
                    $("#divLoading").hide();
                    $('html, body').animate({
                        scrollTop: 230 // Means Less header height
                    },
                        400);

                });

            //$("#CardID").keydown(function (event) {
            //    if (event.shiftKey) {
            //        event.preventDefault();
            //    }
            //    if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 17) {
            //    }
            //    else {
            //        if (event.keyCode < 95) {
            //            if (event.keyCode < 48 || event.keyCode > 57) {
            //                event.preventDefault();
            //            }
            //        }
            //        else {
            //            if (event.keyCode < 96 || event.keyCode > 105) {
            //                event.preventDefault();
            //            }
            //        }
            //    }
            //});
        });

        function Validate() {
            if ($("#RequestLevelPerson").val() === "Team") {
                if ($("#Name").val() === "") {
                    alert("Please enter the name");
                    return false;
                }
            }
        }
        function ValidateName() {
            var x = $("#CardID").val();
            if (isNaN(x)) {
                Clearshowalert("Please enter a valid Card Id.", "alert alert-danger");
                return false;
            }

            $("alert_placeholder").val("");
            if ($("#showalert") != undefined){
                $("#showalert").remove();
            }

            if ($("#RequestLevelPerson").val() === "My") {
            }
            else {
                if (!ValidateAceessCardNumber($("#CardID").val(), $("#UserID").val())) {
                    Clearshowalert("Please entere valid AccessCard Number", "alert alert-danger");
                    return false;
                }
            }
        }
    </script>

}

@{

    string heading = string.Empty;
    string exportExcel = string.Empty;

    heading = "Access Card Report";

    <div class="row">
        <div class="col-sm-12">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">@heading</h3>
                </div>
                <div class="box-body">
                    <form id='your-range-form' action='@Url.Action("ExportAccessCardAttendanceToExcel","Admin", new { RequestLevelPerson = (string)ViewBag.RequestLevelPerson })' method='post'>

                        @{
                            @Html.Hidden("RequestLevelPerson", (string)ViewBag.RequestLevelPerson)
                            @Html.HiddenFor(x => x.FromDate)
                            @Html.HiddenFor(x => x.ToDate)
                            @Html.HiddenFor(x => x.UserID)
                            <div class="row">
                                <div class="col-sm-3">

                                    @Html.Label("Date Range")
                                    @Html.TextBoxFor(m => m.DateRange, new { @class = "form-control", @readonly = "readonly", @onpaste = "return true" })
                                </div>
                                <div class="col-sm-3">

                                    @Html.Label("AccessCard Number")
                                    @Html.TextBoxFor(a => a.CardID, new { @class = "form-control", @maxLength = "9" })
                                </div>
                                @*<div class="col-sm-3" style="padding-top:10px">
                                        @if ((string)ViewBag.RequestLevelPerson == "Team")
                                        {
                                            <br />
                                            @Html.CheckBoxFor(m => m.DirectEmployees, new { id = "mydirectemployeecheck", @checked = "checked" })
                                            @Html.Label("My Direct Reportees")

                                        }
                                    </div>*@
                                <div class="col-sm-3" style="text-align:right">
                                    <br />
                                    <button style="margin: 6px 12px " type="button" class="btn btn-primary" onclick="loadAccesCardAttendanceRangeSummary()">SEARCH</button>
                                    <button type="submit" class="btn btn-primary" onclick="return ValidateName()">EXPORT TO EXCEL</button>
                                </div>
                            </div>


                        }
                        <br />
                        <div id="alert_placeholder">
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div id="divForEmployeeAttendance"></div>

}