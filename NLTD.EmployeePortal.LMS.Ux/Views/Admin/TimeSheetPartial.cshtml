@using System;
@using System.Web.Mvc;
@using NLTD.EmployeePortal.LMS.Common.DisplayModel;

@model IList<TimeSheetModel>

<script type="text/javascript" src="~/Scripts/lms.js?v=1.06"></script>

<style type="text/css">
    .panel-group .panel {
        border-radius: 0;
        box-shadow: none;
        border-color: #EEEEEE;
        font-weight: bold;
    }

    .panel-default > .panel-heading {
        padding: 0;
        border-radius: 0;
        color: #FFFFFF;
        background-color: #4894B3;
        border-color: #EEEEEE;
        font-weight: bold;
    }

    .panel-title {
        font-size: 12px;
    }

        .panel-title > a {
            display: block;
            padding: 9px;
            text-decoration: none;
        }

    .more-less {
        float: right;
        color: #212121;
    }

    .panel-default > .panel-heading + .panel-collapse > .panel-body {
        border-top-color: #EEEEEE;
    }

    /* ----- v CAN BE DELETED v ----- */
    body {
        background-color: #26a69a;
    }

    .belowworkinghours {
        color: red;
    }

    .weekoff {
        color: dodgerblue;
    }

    .weeklytotal {
        background: #DFD5FD !important;
        font-weight: bold;
    }

    .monthlytotal {
        background: #BBCDFD !important;
        font-weight: bold;
    }
</style>

@if (Model.Count == 0)
{
    <div id="showalert">
        <div class="alert alert-danger">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">x</span>
            </button>
            No matching records found.
        </div>
    </div>

}
else
{
    TimeSheetConsolidate TimeSheetConsolidateObj = new TimeSheetConsolidate();
    if (ViewBag.RequestLevelPerson == "My")
    {
        <table id="TimesheetTable_id"
               class="table table-condensed table-striped table-hover dtatable">
            <thead>

                <tr>
                    <th>
                        @Html.DisplayName("Date")
                    </th>
                    <th>
                        @Html.DisplayName("Day")
                    </th>
                    <th>
                        @Html.DisplayName("Shift")
                    </th>
                    <th>
                        @Html.DisplayName("In Time")
                    </th>
                    <th>
                        @Html.DisplayName("Out Time")
                    </th>
                    <th>
                        @Html.DisplayName("Working Hours")
                    </th>
                    <th>
                        @Html.DisplayName("Status")
                    </th>
                    <th>
                        @Html.DisplayName("Requests")
                    </th>
                    <th>
                        @Html.DisplayName("Late In")
                    </th>
                    <th>
                        @Html.DisplayName("Early Out")
                    </th>
                </tr>
            </thead>

            <tbody>
                @if (Model != null)
                {

                    for (int i = 0; i < Model.Count; i++)
                    {

                        string statusStyle = string.Empty;
                        if (Model[i].Status == "Week Off" || Model[i].Status == "Holiday")
                        {
                            statusStyle = "weekoff";
                        }
                        else if (Model[i].WorkingHours < new TimeSpan(9, 0, 0) && Model[i].Status == "Present")
                        {
                            statusStyle = "belowworkinghours";
                        }
                        if (Model[i].WorkingDate.Day == DateTime.DaysInMonth(Model[i].WorkingDate.Year, Model[i].WorkingDate.Month) || i == 0)
                        {
                            TimeSheetConsolidateObj = GetWeeklyHoursConsolidation(Model.ToList(), Model[i].WorkingDate, Model[i].userID, "Monthly");
                            @*@GetMonthlyHoursHTML(TimeSheetConsolidateObj);*@
                        }
                        if (Model[i].WorkingDate.ToString("ddd") == "Sun" || i == 0)
                        {
                            TimeSheetConsolidateObj = GetWeeklyHoursConsolidation(Model.ToList(), Model[i].WorkingDate, Model[i].userID, "Weekly");
                            @GetWeeklyHoursHTML(TimeSheetConsolidateObj);

                        }

                        <tr>

                            <td>
                                @if (Model[i].WorkingDate != null)
                                {
                                    @Model[i].WorkingDate.ToString("dd-MM-yyyy")
                                }
                                else
                                {
                                    @Html.DisplayName("-")
                                }
                            </td>
                            <td>
                                @Model[i].WorkingDate.DayOfWeek
                            </td>
                            <td>

                                @Model[i].Shift
                            </td>
                            <td>
                                @if (Model[i].InTime == DateTime.MinValue)
                                {
                                    @Html.DisplayName("-")
                                }
                                else if (@Model[i].InTime != null)
                                {
                                    @Model[i].InTime.ToString("HH:mm:ss");
                                }

                                else
                                {
                                    @Html.DisplayName("-")
                                }
                            </td>
                            <td>

                                @if (Model[i].OutTime == DateTime.MinValue)
                                {
                                    @Html.DisplayName("-")
                                }
                                else if (@Model[i].OutTime != null)
                                {
                                    @Model[i].OutTime.ToString("HH:mm:ss")
                                }
                                else
                                {
                                    @Html.DisplayName("-")
                                }
                            </td>
                            <td class="@statusStyle">
                                @Model[i].WorkingHours
                            </td>
                            <td>
                                @Model[i].Status
                            </td>
                            <td>
                                @Model[i].Requests
                            </td>
                            <td>
                                @Model[i].LateIn
                            </td>
                            <td>
                                @Model[i].EarlyOut
                            </td>
                        </tr>

                    }
                }
            </tbody>
        </table>

    }
    else
    {

        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
            @for (int i = 0; i < Model.Count; i++)
            {
                Int64 userID = Model[i].userID;
                <div class="panel panel-default">
                    <div class="panel-heading" role="tab" id="@("heading" + Model[i].userID)">
                        <h4 class="panel-title">
                            <a role="button" data-toggle="collapse" data-parent="#accordion" href="@("#" + "collapse" + Model[i].userID)" aria-expanded="true" aria-controls="collapseOne">
                                <i class="more-less glyphicon glyphicon-plus"></i>
                                @Model[i].Name
                            </a>
                        </h4>
                    </div>
                    <div id="@("collapse" + Model[i].userID)" style="background-color:#ecf0f5" class="panel-collapse collapse" role="tabpanel" aria-labelledby="@("heading" + Model[i].userID)">
                        <div class="panel-body">
                            <table class="table table-condensed table-striped table-hover dtatable">
                                <thead>
                                    <tr>
                                        <th>
                                            @Html.DisplayName("Date")
                                        </th>
                                        <th>
                                            @Html.DisplayName("Day")
                                        </th>
                                        <th>
                                            @Html.DisplayName("Shift")
                                        </th>
                                        <th>
                                            @Html.DisplayName("In Time")
                                        </th>
                                        <th>
                                            @Html.DisplayName("Out Time")
                                        </th>
                                        <th>
                                            @Html.DisplayName("Working Hours")
                                        </th>
                                        <th>
                                            @Html.DisplayName("Status")
                                        </th>
                                        <th>
                                            @Html.DisplayName("Requests")
                                        </th>
                                        <th>
                                            @Html.DisplayName("Late In")
                                        </th>
                                        <th>
                                            @Html.DisplayName("Early Out")
                                        </th>
                                    </tr>
                                </thead>

                                <tbody>
                                    @for (int j = i; j < Model.Count; j++)
                                    {
                                        string statusStyle = string.Empty;
                                        if (Model[j].Status == "Week Off" || Model[j].Status == "Holiday")
                                        {
                                            statusStyle = "weekoff";
                                        }
                                        else if (Model[j].WorkingHours < new TimeSpan(9, 0, 0) && Model[j].Status == "Present")
                                        {
                                            statusStyle = "belowworkinghours";
                                        }
                                        if (Model[j].userID != userID)
                                        {
                                            userID = Model[j].userID;
                                            i = j - 1;
                                            break;
                                        }
                                        if (i == j)
                                        {
                                            TimeSheetConsolidateObj = GetWeeklyHoursConsolidation(Model.ToList(), Model[i].WorkingDate, Model[i].userID, "Monthly");
                                            @*@GetMonthlyHoursHTML(TimeSheetConsolidateObj);*@
                                    TimeSheetConsolidateObj = GetWeeklyHoursConsolidation(Model.ToList(), Model[i].WorkingDate, Model[i].userID, "Weekly");
                                    @GetWeeklyHoursHTML(TimeSheetConsolidateObj);

                                        }

                                        if (Model[j].WorkingDate.Day == DateTime.DaysInMonth(Model[j].WorkingDate.Year, Model[j].WorkingDate.Month) && j != i)
                                        {
                                            TimeSheetConsolidateObj = GetWeeklyHoursConsolidation(Model.ToList(), Model[j].WorkingDate, Model[j].userID, "Monthly");
                                            @*@GetMonthlyHoursHTML(TimeSheetConsolidateObj);*@
                                        }
                                        if (Model[j].WorkingDate.ToString("ddd") == "Sun" && j != i)
                                        {
                                            TimeSheetConsolidateObj = GetWeeklyHoursConsolidation(Model.ToList(), Model[j].WorkingDate, Model[j].userID, "Weekly");
                                            @GetWeeklyHoursHTML(TimeSheetConsolidateObj);
                                        }
                                        <tr>
                                            <td>
                                                @if (Model[j].WorkingDate != null)
                                                {
                                                    @Model[j].WorkingDate.ToString("dd-MM-yyyy");
                                                }
                                                else
                                                {
                                                    @Html.DisplayName("-")
                                                }
                                            </td>
                                            <td>

                                                @Model[j].WorkingDate.DayOfWeek
                                            </td>
                                            <td>

                                                @Model[j].Shift
                                            </td>
                                            <td>
                                                @if (Model[j].InTime == DateTime.MinValue)
                                                {
                                                    @Html.DisplayName("-")
                                                }
                                                else if (Model[j].InTime != null)
                                                {
                                                    @Model[j].InTime.ToString("HH:mm:ss");
                                                }

                                                else
                                                {
                                                    @Html.DisplayName("-")
                                                }
                                            </td>
                                            <td>

                                                @if (Model[j].OutTime == DateTime.MinValue)
                                                {
                                                    @Html.DisplayName("-")
                                                }
                                                else if (Model[j].OutTime != null)
                                                {
                                                    @Model[j].OutTime.ToString("HH:mm:ss")
                                                }
                                                else
                                                {
                                                    @Html.DisplayName("-")
                                                }
                                            </td>
                                            <td class="@statusStyle">
                                                @Model[j].WorkingHours
                                            </td>
                                            <td>
                                                @Model[j].Status
                                            </td>
                                            <td>
                                                @Model[j].Requests
                                            </td>
                                            <td>
                                                @Model[j].LateIn
                                            </td>
                                            <td>
                                                @Model[j].EarlyOut
                                            </td>
                                        </tr>

                                        if (j == Model.Count - 1)
                                        {
                                            i = j;
                                            break;
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
        </div>
    }

}

@functions
{
    public string GetWeeklyWorkingHours(TimeSpan t)
    {
        string totalHours = Math.Floor(t.TotalHours).ToString();
        if (totalHours.Length == 1)
        {
            totalHours = "0" + totalHours;
        }
        return string.Format("{0}:{1}", totalHours, t.ToString("mm\\:ss"));
    }

    //public TimeSheetConsolidate CalculateTimeSheetConsolidation(TimeSheetModel TimeSheetModelObj, TimeSheetConsolidate TimeSheetConsolidateObj)
    //{
    //    TimeSheetConsolidateObj.weeklyHours = TimeSheetConsolidateObj.weeklyHours + TimeSheetModelObj.WorkingHours;
    //    TimeSheetConsolidateObj.monthlyHours = TimeSheetConsolidateObj.monthlyHours + TimeSheetModelObj.WorkingHours;
    //    if (TimeSheetModelObj.LateIn.Seconds > 0)
    //    {
    //        TimeSheetConsolidateObj.weeklyLateCount = TimeSheetConsolidateObj.weeklyLateCount + 1;
    //        TimeSheetConsolidateObj.monthlyLateCount = TimeSheetConsolidateObj.monthlyLateCount + 1;
    //    }
    //    if (TimeSheetModelObj.EarlyOut.Seconds > 0)
    //    {
    //        TimeSheetConsolidateObj.weeklyEarlyCount = TimeSheetConsolidateObj.weeklyEarlyCount + 1;
    //        TimeSheetConsolidateObj.monthlyEarlyCount = TimeSheetConsolidateObj.monthlyEarlyCount + 1;
    //    }
    //    if (!string.IsNullOrEmpty(TimeSheetModelObj.LMSStatus) &&
    //            TimeSheetModelObj.LMSStatus.Contains("Permission"))
    //    {
    //        TimeSheetConsolidateObj.weeklyPermissionCount = TimeSheetConsolidateObj.weeklyPermissionCount + 1;
    //        TimeSheetConsolidateObj.monthlyPermissionCount = TimeSheetConsolidateObj.monthlyPermissionCount + 1;
    //    }
    //    if (!string.IsNullOrEmpty(TimeSheetModelObj.LMSStatus) && TimeSheetModelObj.LMSStatus.Contains("Leave"))
    //    {
    //        TimeSheetConsolidateObj.weeklyLeaveCount = TimeSheetConsolidateObj.weeklyLeaveCount + 1;
    //        TimeSheetConsolidateObj.monthlyLeaveCount = TimeSheetConsolidateObj.monthlyLeaveCount + 1;
    //    }
    //    TimeSheetConsolidateObj.isWeeklyHoursUpdate = true;
    //    TimeSheetConsolidateObj.isMonthlyHoursUpdate = true;
    //    return TimeSheetConsolidateObj;
    //}
    //public TimeSheetConsolidate ClearWeeklyTimeSheetConsolidation(TimeSheetConsolidate TimeSheetConsolidateObj)
    //{
    //    TimeSheetConsolidateObj.weeklyEarlyCount = 0;
    //    TimeSheetConsolidateObj.weeklyLateCount = 0;
    //    TimeSheetConsolidateObj.weeklyPermissionCount = 0;
    //    TimeSheetConsolidateObj.weeklyLeaveCount = 0;
    //    TimeSheetConsolidateObj.weeklyHours = new TimeSpan();
    //    TimeSheetConsolidateObj.isWeeklyHoursUpdate = false;

    //    return TimeSheetConsolidateObj;
    //}
    //public TimeSheetConsolidate ClearMonthlyTimeSheetConsolidation(TimeSheetConsolidate TimeSheetConsolidateObj)
    //{
    //    TimeSheetConsolidateObj.monthlyEarlyCount = 0;
    //    TimeSheetConsolidateObj.monthlyLateCount = 0;
    //    TimeSheetConsolidateObj.monthlyPermissionCount = 0;
    //    TimeSheetConsolidateObj.monthlyLeaveCount = 0;
    //    TimeSheetConsolidateObj.monthlyHours = new TimeSpan();
    //    TimeSheetConsolidateObj.isMonthlyHoursUpdate = false;
    //    return TimeSheetConsolidateObj;
    //}

    public TimeSheetConsolidate GetWeeklyHoursConsolidation(List<TimeSheetModel> TimeSheetModelList, DateTime fromDatetime, Int64 userID, string type)
    {
        DateTime todateTime = new DateTime();
        if (type == "Weekly")
        {
            todateTime = Previous(fromDatetime, DayOfWeek.Monday);
        }
        if (type == "Monthly")
        {
            todateTime = new DateTime(fromDatetime.Year, fromDatetime.Month, 1);
        }

        TimeSheetConsolidate TimeSheetConsolidateObj = (from m in TimeSheetModelList
                                                        where m.WorkingDate <= fromDatetime &&
                                           m.WorkingDate >= todateTime && m.userID == userID
                                                        group m by m.userID into g
                                                        select new TimeSheetConsolidate
                                                        {
                                                            hours = new TimeSpan(g.Sum(r => r.WorkingHours.Ticks)),
                                                            permissionCountPersonal = g.Sum(r => r.permissionCountPersonal),
                                                            permissionCountOfficial = g.Sum(r => r.permissionCountOfficial),
                                                            leaveCount = (g.Where(k => k.Requests.Contains("Leave")).Select(x => x.LeaveDayQty)).Sum(),
                                                            lateCount = g.Count(k => k.LateIn > new TimeSpan()),
                                                            earlyCount = g.Count(k => k.EarlyOut > new TimeSpan()),
                                                            fromDatetime = g.Min(k => k.WorkingDate),
                                                            toDatetime = g.Max(k => k.WorkingDate),
                                                            WFHCount = (g.Where(k => k.Requests.Contains("Work From Home")).Select(x => x.LeaveDayQty)).Sum()
                                                        }).FirstOrDefault();

        return TimeSheetConsolidateObj;
    }

    public DateTime Previous(DateTime from, DayOfWeek dayOfWeek)
    {
        int start = (int)from.DayOfWeek;
        int target = (int)dayOfWeek;
        if (target > start)
            target -= 7;
        return from.AddDays(target - start);
    }
}

@helper GetWeeklyHoursHTML(TimeSheetConsolidate TimeSheetConsolidateObj)
        {
    <tr class="weeklytotal">
        <td>
            @Html.DisplayName("Summary")
        </td>
        <td>
            @string.Format("{0} {1} - {2} {3}", TimeSheetConsolidateObj.fromDatetime.Day, TimeSheetConsolidateObj.fromDatetime.ToString("MMM"),
        TimeSheetConsolidateObj.toDatetime.Day, TimeSheetConsolidateObj.toDatetime.ToString("MMM"))
        </td>
        <td>
            @Html.DisplayName("Work From Home : ")
            @Convert.ToString(TimeSheetConsolidateObj.WFHCount)
        </td>
        <td style="text-align: center;" colspan="2">
            @Html.DisplayName("Permission (O:")
            @Convert.ToString(TimeSheetConsolidateObj.permissionCountOfficial)hrs,P:
            @Convert.ToString(TimeSheetConsolidateObj.permissionCountPersonal)hrs)
        </td>
        <td>
            @GetWeeklyWorkingHours(TimeSheetConsolidateObj.hours)
        </td>
        <td></td>
        <td>
            @Html.DisplayName("Leave : ")
            @Convert.ToString(TimeSheetConsolidateObj.leaveCount)
        </td>
        <td>
            @Html.DisplayName("Late In : ")
            @Convert.ToString(TimeSheetConsolidateObj.lateCount)
        </td>
        <td>
            @Html.DisplayName("Early Out : ")
            @Convert.ToString(TimeSheetConsolidateObj.earlyCount)
        </td>
        <td style="padding: 0px;"></td>
    </tr>
}
@helper GetMonthlyHoursHTML(TimeSheetConsolidate TimeSheetConsolidateObj)
{

    <tr class="monthlytotal">
        <td>
            @Html.DisplayName("Monthly Summary")
        </td>
        <td>
            @TimeSheetConsolidateObj.toDatetime.ToString("MMMM")
        </td>
        <td>
            @Html.DisplayName("Work From Home : ")
            @Convert.ToString(TimeSheetConsolidateObj.WFHCount)
        </td>
        <td></td>
        <td></td>
        <td>
            @GetWeeklyWorkingHours(TimeSheetConsolidateObj.hours)
        </td>
        <td>
            @Html.DisplayName("Permission-Personal : ")
            @Convert.ToString(TimeSheetConsolidateObj.permissionCountPersonal)
            hrs
            @Html.DisplayName("Permission-Official : ")
            @Convert.ToString(TimeSheetConsolidateObj.permissionCountOfficial)
            hrs
        </td>
        <td>
            @Html.DisplayName("Leave : ")
            @Convert.ToString(TimeSheetConsolidateObj.leaveCount)
        </td>
        <td>
            @Html.DisplayName("Late In : ")
            @Convert.ToString(TimeSheetConsolidateObj.lateCount)
        </td>
        <td>
            @Html.DisplayName("Early out")
            @Convert.ToString(TimeSheetConsolidateObj.earlyCount)
        </td>
    </tr>

}